// Generated by view binder compiler. Do not edit!
package com.hcondor.t2_condorlunahimerjerly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hcondor.t2_condorlunahimerjerly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMascotaBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnEditar;

  @NonNull
  public final Button btnEliminar;

  @NonNull
  public final ImageView imageMascota;

  @NonNull
  public final TextView tvDescripcion;

  @NonNull
  public final TextView tvNombre;

  @NonNull
  public final TextView tvPrecio;

  @NonNull
  public final TextView tvTipo;

  private ItemMascotaBinding(@NonNull CardView rootView, @NonNull Button btnEditar,
      @NonNull Button btnEliminar, @NonNull ImageView imageMascota, @NonNull TextView tvDescripcion,
      @NonNull TextView tvNombre, @NonNull TextView tvPrecio, @NonNull TextView tvTipo) {
    this.rootView = rootView;
    this.btnEditar = btnEditar;
    this.btnEliminar = btnEliminar;
    this.imageMascota = imageMascota;
    this.tvDescripcion = tvDescripcion;
    this.tvNombre = tvNombre;
    this.tvPrecio = tvPrecio;
    this.tvTipo = tvTipo;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMascotaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMascotaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_mascota, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMascotaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEditar;
      Button btnEditar = ViewBindings.findChildViewById(rootView, id);
      if (btnEditar == null) {
        break missingId;
      }

      id = R.id.btnEliminar;
      Button btnEliminar = ViewBindings.findChildViewById(rootView, id);
      if (btnEliminar == null) {
        break missingId;
      }

      id = R.id.imageMascota;
      ImageView imageMascota = ViewBindings.findChildViewById(rootView, id);
      if (imageMascota == null) {
        break missingId;
      }

      id = R.id.tvDescripcion;
      TextView tvDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (tvDescripcion == null) {
        break missingId;
      }

      id = R.id.tvNombre;
      TextView tvNombre = ViewBindings.findChildViewById(rootView, id);
      if (tvNombre == null) {
        break missingId;
      }

      id = R.id.tvPrecio;
      TextView tvPrecio = ViewBindings.findChildViewById(rootView, id);
      if (tvPrecio == null) {
        break missingId;
      }

      id = R.id.tvTipo;
      TextView tvTipo = ViewBindings.findChildViewById(rootView, id);
      if (tvTipo == null) {
        break missingId;
      }

      return new ItemMascotaBinding((CardView) rootView, btnEditar, btnEliminar, imageMascota,
          tvDescripcion, tvNombre, tvPrecio, tvTipo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
